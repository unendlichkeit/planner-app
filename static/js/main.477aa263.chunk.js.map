{"version":3,"sources":["components/days/DayBox.js","components/days/DivRow.js","App.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["DayBox","day","DivRow","App","d","Date","getFullYear","getMonth","nrMonthsToDisplay","days","push","getDay","date","getDate","setDate","console","log","newArr","tempArr","i","length","map","row","React","Component","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAUeA,G,MARA,SAAC,GAAW,IAAVC,EAAS,EAATA,IACb,OACI,6BACI,kCAASA,MCKNC,EARA,WACX,OACI,+BCuDOC,E,uKA7CX,IAJA,IAAIC,EAAI,IAAIC,MAAK,IAAIA,MAAOC,eAAe,IAAID,MAAOE,YAElDC,EAAoBJ,EAAEG,WAAW,EACjCE,EAAO,GACLL,EAAEG,WAAaC,GAInBC,EAAKC,KAAM,CAACT,IAAKG,EAAEO,SAAUC,KAAMR,EAAES,YACrCT,EAAEU,QAAQV,EAAES,UAAU,GAE5BE,QAAQC,IAAIP,GAIR,IAFA,IAAIQ,EAAS,GACTC,EAAU,GACNC,EAAG,EAAGA,EAAEV,EAAKW,OAAQD,IAER,IAAhBV,EAAKU,GAAGlB,IACTiB,EAAQR,KAAKD,EAAKU,KAIlBF,EAAOP,KAAKQ,GACZA,EAAU,CAACT,EAAKU,KAEfA,IAAIV,EAAKW,OAAO,GAAGH,EAAOP,KAAKQ,GAIpC,OAFAH,QAAQC,IAAIC,GAGV,6BAEIA,EAAOI,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,KAEIA,EAAID,KAAI,SAAAZ,GAAI,OACV,kBAAC,EAAD,CAAQR,IAAKQ,EAAKG,mB,GAxClBW,IAAMC,W,gCCFTC,cAAgB,ICAzBC,EAAc,CAACC,KAKNC,EAHDC,YAAYC,EAAaC,IAAe,WAAf,EAAmBL,ICE1DM,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,QAIJC,SAASC,eAAe,W","file":"static/js/main.477aa263.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DayBox = ({day}) => {\r\n    return (\r\n        <div>\r\n            <p>Day { day }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayBox;","import React from 'react';\r\n\r\nconst DivRow = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DivRow;","import React from 'react';\nimport './App.css';\nimport DayBox from './components/days/DayBox';\nimport DivRow from './components/days/DivRow';\n\n\nclass App extends React.Component {\n\n  render() {\n    \n    let d = new Date(new Date().getFullYear(), new Date().getMonth());\n\n    let nrMonthsToDisplay = d.getMonth()+2;\n    let days = [];\n    while(d.getMonth() < nrMonthsToDisplay)\n    {\n      // console.log(d.getMonth(), d.getFullYear());\n      // console.log(nrMonthsToDisplay);\n      days.push( {day: d.getDay(), date: d.getDate()} );\n      d.setDate(d.getDate()+1);\n    }\nconsole.log(days);\n\n    let newArr = [];\n    let tempArr = [];\n    for(let i =0; i<days.length; i++)\n    {\n      if(days[i].day !== 0) {\n        tempArr.push(days[i]);\n        // console.log(tempArr);\n      }\n      else {\n        newArr.push(tempArr);\n        tempArr = [days[i]];\n      }\n      if(i===days.length-1) newArr.push(tempArr);\n    }\n    console.log(newArr);\n\n    return (\n      <div>\n        {\n          newArr.map(row => (\n            <DivRow>\n              {\n                row.map(days => (\n                  <DayBox day={days.date} />\n                ))\n              }\n            </DivRow>\n          ))\n          // days.map(day => (<DayBox day={day.date}/>))\n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n// import userReducer from './user/user.reducer';\r\n// import cartReducer from './cart/cart.reducer';\r\n\r\nexport default combineReducers({\r\n    // user: userReducer,\r\n    // cart: cartReducer,\r\n    // shop: shopReducer\r\n})  ","import { createStore, applyMiddleware } from 'redux'; \r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n// console.log(store.getState());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>    \n  </Provider>\n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}