{"version":3,"sources":["components/days/DayBox.js","components/days/DivRow.js","App.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["DayBox","day","DivRow","rowData","firstLast","className","map","days","key","id","date","App","d","Date","getFullYear","getMonth","nrMonthsToDisplay","push","getDay","getDate","setDate","console","log","newArr","tempArr","i","length","style","row","index","React","Component","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAUeA,G,MARA,SAAC,GAAW,IAAVC,EAAS,EAATA,IACb,OACI,6BACI,kCAASA,MCWNC,G,MAZA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACtB,OACI,yBAAKC,UAAS,iBAAYD,IAElBD,EAAQG,KAAI,SAAAC,GAAI,OACZ,kBAAC,EAAD,CAAQC,IAAKD,EAAKE,GAAIR,IAAKM,EAAKG,aCyDrCC,E,uKApDX,IAJA,IAAIC,EAAI,IAAIC,MAAK,IAAIA,MAAOC,eAAe,IAAID,MAAOE,YAElDC,EAAoBJ,EAAEG,WAAW,EACjCR,EAAO,GACLK,EAAEG,WAAaC,GAInBT,EAAKU,KAAM,CAAChB,IAAKW,EAAEM,SAAUR,KAAME,EAAEO,YACrCP,EAAEQ,QAAQR,EAAEO,UAAU,GAE5BE,QAAQC,IAAIf,GAIR,IAFA,IAAIgB,EAAS,GACTC,EAAU,GACNC,EAAG,EAAGA,EAAElB,EAAKmB,OAAQD,IAG3BlB,EAAKkB,GAAGhB,GAAKgB,EAAE,EAGI,IAAhBlB,EAAKkB,GAAGxB,IACTuB,EAAQP,KAAKV,EAAKkB,KAIlBF,EAAON,KAAKO,GACZA,EAAU,CAACjB,EAAKkB,KAEfA,IAAIlB,EAAKmB,OAAO,GAAGH,EAAON,KAAKO,GAIpC,OAFAH,QAAQC,IAAIC,GAGV,6BACE,yBAAKlB,UAAU,iBAAiBsB,MAAO,CAAC,QAAU,OAAQ,eAAkB,iBAC1E,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,oCAGAJ,EAAOjB,KAAI,SAACsB,EAAKC,GAAN,OACT,kBAAC,EAAD,CAAQrB,IAAKqB,EAAO1B,QAASyB,EAAKxB,UAAmB,GAAPyB,EAAW,QAAUA,GAAON,EAAOG,OAAO,EAAI,OAAS,a,GAlD/FI,IAAMC,W,gCCFTC,cAAgB,ICAzBC,EAAc,CAACC,KAKNC,EAHDC,YAAYC,EAAaC,IAAe,WAAf,EAAmBL,ICE1DM,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,QAIJC,SAASC,eAAe,W","file":"static/js/main.e51a6225.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DayBox = ({day}) => {\r\n    return (\r\n        <div>\r\n            <p>Day { day }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayBox;","import React from 'react';\r\nimport DayBox from './DayBox';\r\nimport './DayRow.scss';\r\n\r\nconst DivRow = ({rowData, firstLast}) => {\r\n    return (\r\n        <div className={`divRow ${firstLast}`}>\r\n            {\r\n                rowData.map(days => (\r\n                    <DayBox key={days.id} day={days.date} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DivRow;","import React from 'react';\nimport './App.css';\nimport DayBox from './components/days/DayBox';\nimport DivRow from './components/days/DivRow';\n\n\nclass App extends React.Component {\n\n  render() {\n    \n    let d = new Date(new Date().getFullYear(), new Date().getMonth());\n\n    let nrMonthsToDisplay = d.getMonth()+2;\n    let days = [];\n    while(d.getMonth() < nrMonthsToDisplay)\n    {\n      // console.log(d.getMonth(), d.getFullYear());\n      // console.log(nrMonthsToDisplay);\n      days.push( {day: d.getDay(), date: d.getDate()} );\n      d.setDate(d.getDate()+1);\n    }\nconsole.log(days);\n\n    let newArr = [];\n    let tempArr = [];\n    for(let i =0; i<days.length; i++)\n    {\n      //set id for each day object \n      days[i].id = i+1;\n\n      //if day!=0, push object to temporary array, else push the whole temp array\n      if(days[i].day !== 0) {\n        tempArr.push(days[i]);\n        // console.log(tempArr);\n      }\n      else {\n        newArr.push(tempArr);\n        tempArr = [days[i]];\n      }\n      if(i===days.length-1) newArr.push(tempArr);\n    }\n    console.log(newArr);\n\n    return (\n      <div>\n        <div className=\"calendarHeader\" style={{'display':'flex', 'justifyContent': 'space-around'}}>\n          <div>Su</div>\n          <div>Mo</div>\n          <div>Tu</div>\n          <div>We</div>\n          <div>Th</div>\n          <div>Fr</div>\n          <div>Sa</div>\n        </div>\n        {\n          newArr.map((row, index) => (\n            <DivRow key={index} rowData={row} firstLast={ index==0 ? 'first' : index==newArr.length-1 ? 'last' : '' }/>\n          ))\n          // days.map(day => (<DayBox day={day.date}/>))\n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n// import userReducer from './user/user.reducer';\r\n// import cartReducer from './cart/cart.reducer';\r\n\r\nexport default combineReducers({\r\n    // user: userReducer,\r\n    // cart: cartReducer,\r\n    // shop: shopReducer\r\n})  ","import { createStore, applyMiddleware } from 'redux'; \r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n// console.log(store.getState());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>    \n  </Provider>\n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}